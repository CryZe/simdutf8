name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: playhouse
    strategy:
      matrix:
        toolchain: [stable, nightly]
        arch: [x86_64, i686]
        simdfeatures: [avx2, sse4.2]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.toolchain }}-${{ matrix.arch }}
            profile: minimal
            override: true
      - name: Build
        run: cargo build --verbose
        env:
            RUSTFLAGS: -C target-feature=+${{ matrix.simdfeatures }}
      - name: Run tests
        run: cargo test --verbose
        env:
            RUSTFLAGS: -C target-feature=+${{ matrix.simdfeatures }}

  clippy_check:
    runs-on: playhouse
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            profile: minimal
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  benchmark:
    runs-on: hurricane
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            profile: minimal
            override: true
        with:
            path: target/criterion
            key: criterion-epoch-2
      - name: Run benchmark
        run: cargo bench --bench benchmark --features=bench -- --color=always --save-baseline master
        env:
            RUSTFLAGS: -C target-feature=+avx2
      - uses: actions/upload-artifact@v2
        with:
          name: criterion-results
          path: target/criterion/